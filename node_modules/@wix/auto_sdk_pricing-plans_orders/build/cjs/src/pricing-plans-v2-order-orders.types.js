"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebhookIdentityType = exports.ReasonNotSuspendable = exports.SortOrder = exports.Set = exports.Status = exports.PaymentStatus = exports.CancellationEffectiveAt = exports.CancellationCause = exports.OrderStatus = exports.OrderMethod = exports.OrderType = exports.PeriodUnit = void 0;
var PeriodUnit;
(function (PeriodUnit) {
    /** Not defined. */
    PeriodUnit["UNDEFINED"] = "UNDEFINED";
    /** Time unit is a day. */
    PeriodUnit["DAY"] = "DAY";
    /** Time unit is a week. */
    PeriodUnit["WEEK"] = "WEEK";
    /** Time unit is a month. */
    PeriodUnit["MONTH"] = "MONTH";
    /** Time unit is a year. */
    PeriodUnit["YEAR"] = "YEAR";
})(PeriodUnit || (exports.PeriodUnit = PeriodUnit = {}));
var OrderType;
(function (OrderType) {
    /** Undefined order type. */
    OrderType["UNDEFINED"] = "UNDEFINED";
    /** The buyer purchased the plan using the site. */
    OrderType["ONLINE"] = "ONLINE";
    /** The buyer made a manual, offline purchase without using the site. */
    OrderType["OFFLINE"] = "OFFLINE";
    /** The buyer made a purchase through an external payment provider. */
    OrderType["EXTERNAL"] = "EXTERNAL";
})(OrderType || (exports.OrderType = OrderType = {}));
var OrderMethod;
(function (OrderMethod) {
    /** Unknown order method. */
    OrderMethod["UNKNOWN"] = "UNKNOWN";
    /** Mail Order / Telephone Order transaction. */
    OrderMethod["MOTO"] = "MOTO";
    /** Point of Sale transaction. */
    OrderMethod["POS"] = "POS";
})(OrderMethod || (exports.OrderMethod = OrderMethod = {}));
var OrderStatus;
(function (OrderStatus) {
    /** Undefined order status. */
    OrderStatus["UNDEFINED"] = "UNDEFINED";
    /** Order has been initiated but payment hasn't been processed yet. The plan isn't yet available for use to the buyer. */
    OrderStatus["DRAFT"] = "DRAFT";
    /** Order has been purchased and its start date is set in the future. */
    OrderStatus["PENDING"] = "PENDING";
    /** Order has been processed. The plan is available for use. */
    OrderStatus["ACTIVE"] = "ACTIVE";
    /** Order, and use of the plan, is paused. The order, and use of the plan, can be resumed. */
    OrderStatus["PAUSED"] = "PAUSED";
    /** Order has completed its duration and is no longer available for use. */
    OrderStatus["ENDED"] = "ENDED";
    /** Order has been canceled. */
    OrderStatus["CANCELED"] = "CANCELED";
})(OrderStatus || (exports.OrderStatus = OrderStatus = {}));
var CancellationCause;
(function (CancellationCause) {
    /** Undefined cancellation cause. */
    CancellationCause["UNDEFINED"] = "UNDEFINED";
    /** Wix user canceled the order. */
    CancellationCause["OWNER_ACTION"] = "OWNER_ACTION";
    /** Buyer initiated the cancellation. */
    CancellationCause["MEMBER_ACTION"] = "MEMBER_ACTION";
    /** Payment transaction failed. */
    CancellationCause["PAYMENT_FAILURE"] = "PAYMENT_FAILURE";
    /** Buyer's payment details weren't set up correctly. */
    CancellationCause["PAYMENT_SETUP_FAILURE"] = "PAYMENT_SETUP_FAILURE";
    /** Reason for the cancellation is unknown. */
    CancellationCause["UNKNOWN"] = "UNKNOWN";
})(CancellationCause || (exports.CancellationCause = CancellationCause = {}));
var CancellationEffectiveAt;
(function (CancellationEffectiveAt) {
    /** Undefined cancellation time. */
    CancellationEffectiveAt["UNDEFINED"] = "UNDEFINED";
    /** Cancellation occurs immediately and the buyer can no longer use the plan. */
    CancellationEffectiveAt["IMMEDIATELY"] = "IMMEDIATELY";
    /** Cancellation occurs at the next payment date and time. Buyer can continue to use the plan until that date and time. */
    CancellationEffectiveAt["NEXT_PAYMENT_DATE"] = "NEXT_PAYMENT_DATE";
})(CancellationEffectiveAt || (exports.CancellationEffectiveAt = CancellationEffectiveAt = {}));
var PaymentStatus;
(function (PaymentStatus) {
    /** Undefined payment status. */
    PaymentStatus["UNDEFINED"] = "UNDEFINED";
    /** Payment has been paid. */
    PaymentStatus["PAID"] = "PAID";
    /** Payment has been refunded. */
    PaymentStatus["REFUNDED"] = "REFUNDED";
    /** Payment transaction didn't complete. */
    PaymentStatus["FAILED"] = "FAILED";
    /** Payment has not been paid. */
    PaymentStatus["UNPAID"] = "UNPAID";
    /** Billing has been initialized, but actual charge is yet to be made. This can happen for free trials and payments made with PayPal. */
    PaymentStatus["PENDING"] = "PENDING";
    /** No payment was necessary. For example, for free plans or free trials. */
    PaymentStatus["NOT_APPLICABLE"] = "NOT_APPLICABLE";
})(PaymentStatus || (exports.PaymentStatus = PaymentStatus = {}));
var Status;
(function (Status) {
    /** Undefined status. */
    Status["UNDEFINED"] = "UNDEFINED";
    /** Status while the order is paused. */
    Status["ACTIVE"] = "ACTIVE";
    /** Status when the order is resumed. */
    Status["ENDED"] = "ENDED";
})(Status || (exports.Status = Status = {}));
var Set;
(function (Set) {
    /** Same behavior as `BASIC`.` */
    Set["UNKNOWN_SET"] = "UNKNOWN_SET";
    /** Doesn't return any order form submission data. */
    Set["BASIC"] = "BASIC";
    /** Returns all order form submission data. */
    Set["FULL"] = "FULL";
})(Set || (exports.Set = Set = {}));
var SortOrder;
(function (SortOrder) {
    SortOrder["ASC"] = "ASC";
    SortOrder["DESC"] = "DESC";
})(SortOrder || (exports.SortOrder = SortOrder = {}));
var ReasonNotSuspendable;
(function (ReasonNotSuspendable) {
    /** Undefined reason. */
    ReasonNotSuspendable["UNDEFINED"] = "UNDEFINED";
    /** Saved in the database but is awaiting payment. Non-active orders can't be suspended. */
    ReasonNotSuspendable["PENDING"] = "PENDING";
    /** Trial orders can't be suspended. */
    ReasonNotSuspendable["TRIAL"] = "TRIAL";
    /** Canceled orders can't be suspended. */
    ReasonNotSuspendable["CANCELED"] = "CANCELED";
    /** Ended orders can't be suspended. */
    ReasonNotSuspendable["ENDED"] = "ENDED";
    /** Paid for orders with future start dates can't be suspended. */
    ReasonNotSuspendable["NOT_STARTED"] = "NOT_STARTED";
    /** Order is already suspended. */
    ReasonNotSuspendable["ALREADY_SUSPENDED"] = "ALREADY_SUSPENDED";
    /** Orders based on recurring payments using older stripe versions can't be suspended. */
    ReasonNotSuspendable["OLD_STRIPE"] = "OLD_STRIPE";
})(ReasonNotSuspendable || (exports.ReasonNotSuspendable = ReasonNotSuspendable = {}));
var WebhookIdentityType;
(function (WebhookIdentityType) {
    WebhookIdentityType["UNKNOWN"] = "UNKNOWN";
    WebhookIdentityType["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
    WebhookIdentityType["MEMBER"] = "MEMBER";
    WebhookIdentityType["WIX_USER"] = "WIX_USER";
    WebhookIdentityType["APP"] = "APP";
})(WebhookIdentityType || (exports.WebhookIdentityType = WebhookIdentityType = {}));
//# sourceMappingURL=pricing-plans-v2-order-orders.types.js.map
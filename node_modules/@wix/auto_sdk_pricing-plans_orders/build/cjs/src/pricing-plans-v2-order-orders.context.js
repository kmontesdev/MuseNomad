"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebhookIdentityType = exports.ReasonNotSuspendable = exports.SortOrder = exports.Set = exports.Status = exports.PaymentStatus = exports.CancellationEffectiveAt = exports.CancellationCause = exports.OrderStatus = exports.OrderMethod = exports.OrderType = exports.PeriodUnit = exports.onOrderStartDateChanged = exports.onOrderCreated = exports.onOrderUpdated = exports.onOrderStarted = exports.onOrderResumed = exports.onOrderPurchased = exports.onOrderPaused = exports.onOrderMarkedAsPaid = exports.onOrderEnded = exports.onOrderEndDatePostponed = exports.onOrderCycleStarted = exports.onOrderCanceled = exports.onOrderAutoRenewCanceled = exports.getPricePreview = exports.getOfflineOrderPreview = exports.getOnlineOrderPreview = exports.createOfflineOrder = exports.createOnlineOrder = exports.requestCancellation = exports.memberListOrders = exports.memberGetOrder = exports.resumeOrder = exports.pauseOrder = exports.markAsPaid = exports.cancelOrder = exports.postponeEndDate = exports.managementListOrders = exports.managementGetOrder = void 0;
const pricing_plans_v2_order_orders_public_js_1 = require("./pricing-plans-v2-order-orders.public.js");
const rest_modules_1 = require("@wix/sdk-runtime/rest-modules");
const event_definition_modules_1 = require("@wix/sdk-runtime/event-definition-modules");
const pricing_plans_v2_order_orders_public_js_2 = require("./pricing-plans-v2-order-orders.public.js");
const pricing_plans_v2_order_orders_public_js_3 = require("./pricing-plans-v2-order-orders.public.js");
const pricing_plans_v2_order_orders_public_js_4 = require("./pricing-plans-v2-order-orders.public.js");
const pricing_plans_v2_order_orders_public_js_5 = require("./pricing-plans-v2-order-orders.public.js");
const pricing_plans_v2_order_orders_public_js_6 = require("./pricing-plans-v2-order-orders.public.js");
const pricing_plans_v2_order_orders_public_js_7 = require("./pricing-plans-v2-order-orders.public.js");
const pricing_plans_v2_order_orders_public_js_8 = require("./pricing-plans-v2-order-orders.public.js");
const pricing_plans_v2_order_orders_public_js_9 = require("./pricing-plans-v2-order-orders.public.js");
const pricing_plans_v2_order_orders_public_js_10 = require("./pricing-plans-v2-order-orders.public.js");
const pricing_plans_v2_order_orders_public_js_11 = require("./pricing-plans-v2-order-orders.public.js");
const pricing_plans_v2_order_orders_public_js_12 = require("./pricing-plans-v2-order-orders.public.js");
const pricing_plans_v2_order_orders_public_js_13 = require("./pricing-plans-v2-order-orders.public.js");
const pricing_plans_v2_order_orders_public_js_14 = require("./pricing-plans-v2-order-orders.public.js");
exports.managementGetOrder = (0, rest_modules_1.createRESTModule)(pricing_plans_v2_order_orders_public_js_1.managementGetOrder);
exports.managementListOrders = (0, rest_modules_1.createRESTModule)(pricing_plans_v2_order_orders_public_js_1.managementListOrders);
exports.postponeEndDate = (0, rest_modules_1.createRESTModule)(pricing_plans_v2_order_orders_public_js_1.postponeEndDate);
exports.cancelOrder = (0, rest_modules_1.createRESTModule)(pricing_plans_v2_order_orders_public_js_1.cancelOrder);
exports.markAsPaid = (0, rest_modules_1.createRESTModule)(pricing_plans_v2_order_orders_public_js_1.markAsPaid);
exports.pauseOrder = (0, rest_modules_1.createRESTModule)(pricing_plans_v2_order_orders_public_js_1.pauseOrder);
exports.resumeOrder = (0, rest_modules_1.createRESTModule)(pricing_plans_v2_order_orders_public_js_1.resumeOrder);
exports.memberGetOrder = (0, rest_modules_1.createRESTModule)(pricing_plans_v2_order_orders_public_js_1.memberGetOrder);
exports.memberListOrders = (0, rest_modules_1.createRESTModule)(pricing_plans_v2_order_orders_public_js_1.memberListOrders);
exports.requestCancellation = (0, rest_modules_1.createRESTModule)(pricing_plans_v2_order_orders_public_js_1.requestCancellation);
exports.createOnlineOrder = (0, rest_modules_1.createRESTModule)(pricing_plans_v2_order_orders_public_js_1.createOnlineOrder);
exports.createOfflineOrder = (0, rest_modules_1.createRESTModule)(pricing_plans_v2_order_orders_public_js_1.createOfflineOrder);
exports.getOnlineOrderPreview = (0, rest_modules_1.createRESTModule)(pricing_plans_v2_order_orders_public_js_1.getOnlineOrderPreview);
exports.getOfflineOrderPreview = (0, rest_modules_1.createRESTModule)(pricing_plans_v2_order_orders_public_js_1.getOfflineOrderPreview);
exports.getPricePreview = (0, rest_modules_1.createRESTModule)(pricing_plans_v2_order_orders_public_js_1.getPricePreview);
/**
 * Triggered when an order is canceled and `effectiveAt` is set to `NEXT_PAYMENT_DATE`.
 *
 * This webhook is *not* triggered in the following scenarios:
 * + When an order is canceled and `effectiveAt` is set to `IMMEDIATELY`. Instead, at the time of cancellation, Order Canceled is triggered.
 * + When an order expires at the end of the current payment cycle because it was canceled and `effectiveAt` was set to `NEXT_PAYMENT_DATE`. Instead, at the time of expiration, Order Canceled and Order Ended are triggered.
 */
exports.onOrderAutoRenewCanceled = (0, event_definition_modules_1.createEventModule)(pricing_plans_v2_order_orders_public_js_2.onOrderAutoRenewCanceled);
/**
 * Triggered when an order is canceled.
 *
 * This webhook is triggered either immediately or at the end of the current payment cycle, as follows:
 * + If the order is canceled and `effectiveAt` is set to `IMMEDIATELY`, the webhook is triggered immediately when canceled.
 * + If the order is canceled and `effectiveAt` is set to `NEXT_PAYMENT_DATE`, the webhook is triggered at the end of the current payment cycle. In this case, the Order Auto Renew Canceled Webhook is triggered immediately.
 */
exports.onOrderCanceled = (0, event_definition_modules_1.createEventModule)(pricing_plans_v2_order_orders_public_js_3.onOrderCanceled);
/**
 * Triggered at the start of a new payment cycle for an existing order.
 *
 * Not triggered at the initial start of an offline order.
 */
exports.onOrderCycleStarted = (0, event_definition_modules_1.createEventModule)(pricing_plans_v2_order_orders_public_js_4.onOrderCycleStarted);
/**
 * Triggered when an order's `endDate` is postponed.
 */
exports.onOrderEndDatePostponed = (0, event_definition_modules_1.createEventModule)(pricing_plans_v2_order_orders_public_js_5.onOrderEndDatePostponed);
/**
 * Triggered when an order ends.
 *
 * This webhook is triggered:
 * + When an order expires at the end of the current payment cycle.
 * + When an order is canceled and `effectiveAt` is set to `IMMEDIATELY`.
 */
exports.onOrderEnded = (0, event_definition_modules_1.createEventModule)(pricing_plans_v2_order_orders_public_js_6.onOrderEnded);
/**
 * Triggered when an offline order is marked as paid.
 */
exports.onOrderMarkedAsPaid = (0, event_definition_modules_1.createEventModule)(pricing_plans_v2_order_orders_public_js_7.onOrderMarkedAsPaid);
/**
 * Triggered when an order is paused.
 */
exports.onOrderPaused = (0, event_definition_modules_1.createEventModule)(pricing_plans_v2_order_orders_public_js_8.onOrderPaused);
/**
 * Triggered for any of the following purchase events:
 * + Order is paid in full.
 * + At least 1 order cycle payment is paid for.
 * + Offline order is created, even if not yet marked as paid.
 * + Free order is created.
 */
exports.onOrderPurchased = (0, event_definition_modules_1.createEventModule)(pricing_plans_v2_order_orders_public_js_9.onOrderPurchased);
/**
 * Triggered when a paused order is resumed.
 */
exports.onOrderResumed = (0, event_definition_modules_1.createEventModule)(pricing_plans_v2_order_orders_public_js_10.onOrderResumed);
/**
 * Triggered when an order reaches its `startDate`. Applies to both purchased and free orders.
 */
exports.onOrderStarted = (0, event_definition_modules_1.createEventModule)(pricing_plans_v2_order_orders_public_js_11.onOrderStarted);
/**
 * Triggered for any of the following update events:
 *
 * + Order is paid for. Order Purchased is also triggered.
 * + Order reaches its start date or end date. Order Started and Order Ended, respectively, are also triggered.
 * + New payment cycle of an order starts. Order Cycle Started is also triggered.
 * + Offline order is marked as paid. Order Marked As Paid is also triggered.
 * + End date of the order is postponed. Order End Date Postponed is also triggered
 * + Order is paused, or a paused order is resumed. Order Paused and Order Resumed, respectively, are also triggered.
 * + Order is canceled, either immediately or at the end of the payment cycle. Order Canceled and Order Auto Renew Canceled, respectively, are also triggered.
 */
exports.onOrderUpdated = (0, event_definition_modules_1.createEventModule)(pricing_plans_v2_order_orders_public_js_12.onOrderUpdated);
/**
 * Triggered when an order is created.
 */
exports.onOrderCreated = (0, event_definition_modules_1.createEventModule)(pricing_plans_v2_order_orders_public_js_13.onOrderCreated);
/**
 * Triggered when an order's `startDate` is changed.
 */
exports.onOrderStartDateChanged = (0, event_definition_modules_1.createEventModule)(pricing_plans_v2_order_orders_public_js_14.onOrderStartDateChanged);
var pricing_plans_v2_order_orders_universal_js_1 = require("./pricing-plans-v2-order-orders.universal.js");
Object.defineProperty(exports, "PeriodUnit", { enumerable: true, get: function () { return pricing_plans_v2_order_orders_universal_js_1.PeriodUnit; } });
Object.defineProperty(exports, "OrderType", { enumerable: true, get: function () { return pricing_plans_v2_order_orders_universal_js_1.OrderType; } });
Object.defineProperty(exports, "OrderMethod", { enumerable: true, get: function () { return pricing_plans_v2_order_orders_universal_js_1.OrderMethod; } });
Object.defineProperty(exports, "OrderStatus", { enumerable: true, get: function () { return pricing_plans_v2_order_orders_universal_js_1.OrderStatus; } });
Object.defineProperty(exports, "CancellationCause", { enumerable: true, get: function () { return pricing_plans_v2_order_orders_universal_js_1.CancellationCause; } });
Object.defineProperty(exports, "CancellationEffectiveAt", { enumerable: true, get: function () { return pricing_plans_v2_order_orders_universal_js_1.CancellationEffectiveAt; } });
Object.defineProperty(exports, "PaymentStatus", { enumerable: true, get: function () { return pricing_plans_v2_order_orders_universal_js_1.PaymentStatus; } });
Object.defineProperty(exports, "Status", { enumerable: true, get: function () { return pricing_plans_v2_order_orders_universal_js_1.Status; } });
Object.defineProperty(exports, "Set", { enumerable: true, get: function () { return pricing_plans_v2_order_orders_universal_js_1.Set; } });
Object.defineProperty(exports, "SortOrder", { enumerable: true, get: function () { return pricing_plans_v2_order_orders_universal_js_1.SortOrder; } });
Object.defineProperty(exports, "ReasonNotSuspendable", { enumerable: true, get: function () { return pricing_plans_v2_order_orders_universal_js_1.ReasonNotSuspendable; } });
Object.defineProperty(exports, "WebhookIdentityType", { enumerable: true, get: function () { return pricing_plans_v2_order_orders_universal_js_1.WebhookIdentityType; } });
//# sourceMappingURL=pricing-plans-v2-order-orders.context.js.map